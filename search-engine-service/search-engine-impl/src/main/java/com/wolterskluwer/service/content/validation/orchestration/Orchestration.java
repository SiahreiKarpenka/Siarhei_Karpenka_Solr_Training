//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.11.27 at 06:01:17 AM BRT 
//


package com.wolterskluwer.service.content.validation.orchestration;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

import com.wolterskluwer.service.content.validation.orchestration.Context.Filters.Path;
import com.wolterskluwer.service.mime.MimeType;


/**
 * <p>Java class for Orchestration complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Orchestration">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="metadata" type="{http://wolterskluwer.com/services/validation/orchestration#}Metadata"/>
 *         &lt;element name="property" type="{http://wolterskluwer.com/services/validation/orchestration#}Property" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="context" type="{http://wolterskluwer.com/services/validation/orchestration#}Context" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlRootElement(name = "orchestration")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Orchestration", propOrder = {
    "metadata",
    "property",
    "reporter",
    "context"
})
public class Orchestration {

    @XmlElement(required = true)
    protected Metadata metadata;
    protected List<Property> property;
    @XmlElement(required = true)
    protected List<Context> context;
    @XmlAttribute(name = "handle-archives")
    protected Boolean handleArchives;
    @XmlElement(nillable = true)
    protected List<XmlReporter> reporter;

    /**
     * Gets the value of the handleArchives property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isHandleArchives() {
        if (handleArchives == null) {
            return true;
        } else {
            return handleArchives;
        }
    }

    /**
     * Sets the value of the handleArchives property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setHandleArchives(Boolean value) {
        this.handleArchives = value;
    }	
    /**
     * Gets the value of the metadata property.
     * 
     * @return
     *     possible object is
     *     {@link Metadata }
     *     
     */
    public Metadata getMetadata() {
        return metadata;
    }

    /**
     * Sets the value of the metadata property.
     * 
     * @param value
     *     allowed object is
     *     {@link Metadata }
     *     
     */
    public void setMetadata(Metadata value) {
        this.metadata = value;
    }

    /**
     * Gets the value of the property property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the property property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProperty().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Property }
     * 
     * 
     */
    public List<Property> getProperty() {
        if (property == null) {
            property = new ArrayList<Property>();
        }
        return this.property;
    }

    /**
     * Gets the value of the context property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the context property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getContext().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Context }
     * 
     * 
     */
    public List<Context> getContext() {
        if (context == null) {
            context = new ArrayList<Context>();
        }
        return this.context;
    }

    public List<XmlReporter> getReporter() {
    	if (reporter == null) {
    		return Collections.<XmlReporter>emptyList();
    	}
        return reporter;
    }

    public void setReporter(List<XmlReporter> reporter) {
        this.reporter = reporter;
    }

	public List<Context> getContextsByMimeType(MimeType mimeType) {
		List<Context> result = new ArrayList<Context>();
		for (Context context : this.context) {
			for (Context.Filters.MimeType contextFilterMimeType : context.getFilters().getMimeType()) {
				MimeType contextMimeType = MimeType.parse(contextFilterMimeType.getName());
				if (contextFilterMimeType.isIgnoreParams()) {
					contextMimeType.getParameters().clear();
					mimeType = MimeType.fromOriginalBaseOnly(mimeType);
				}
				if (mimeType.matchesTo(contextMimeType)) {
					result.add(context);
				}
			}
		}
		return result;
	}

	public List<Context> getPathContexts() {
		List<Context> result = new ArrayList<Context>();
		for (Context context : this.context) {
			List<Path> paths = context.getFilters().getPath();
			if (paths != null && paths.size() > 0) {
				result.add(context);
			}
		}
		return result;
	}
}
